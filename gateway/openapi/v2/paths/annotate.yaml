list:
  get:
    summary: List annotations on a data record or folder.
    description: |
      List annotations on a data record or folder. Only clients with read access
      to the subject record or folder may list annotations. Depending on the
      client relationship to the subject, only specific annotations will be
      returned, as follows:

      - Record owner/creator - all annotations are returned
      - Annotation creator - all active annotations, and those created by the client are returned.
      - Others - only active annotations are returned.
    tags:
      - annotation
    parameters:
      - name: id
        in: query
        description: Record or folder ID
        schema:
          type: string
      - $ref: '../components/parameters/offset.yaml'
      - $ref: '../components/parameters/limit.yaml'
    responses:
      '200':
        description: An array of annotation documents
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../components/schemas/annotation.yaml#/annotation"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

view:
  get:
    summary: View annotation information.
    description: |
      View annotation information. Depending on the client relationship to the
      subject or annotation, only specific annotations can be viewed, as follows:

      - Record owner/creator - any annotations can be viewed
      - Annotation creator - any annotation created by the client may be viewed.
      - Others - only active annotations may be viewed.
    tags:
      - annotation
    parameters:
      - name: id
        in: query
        description: Annotation ID
        schema:
          type: string
    responses:
      '200':
        description: An annotation document
        content:
          application/json:
            schema:
              $ref: "../components/schemas/annotation.yaml#/annotation"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

create:
  post:
    summary: Create a new annotation.
    description: Create a new annotation on a data record or folder. Any user
      with read access to the specified data record or folder may create an
      annotation; however, only the record or folder owner/creator may specify
      the initial state of the annotation, and it may only be "open" (default)
      or "active".
    tags:
      - annotation
    parameters:
      - name: subject_id
        in: query
        description: Record or folder ID
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../components/schemas/annotation.yaml#/annotation_core"
              - type: object
                properties:
                  comment:
                    type: string
                    description: Initial annotation comment / description.
                required:
                  - type
                  - title
                  - comment
    responses:
      '200':
        description: An annotation document
        content:
          application/json:
            schema:
              $ref: "../components/schemas/annotation.yaml#/annotation"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

update:
  post:
    summary: Update an existing annotation.
    description: |
      Update type, state, and/or title for an existing annotation. Only the
      annotation subject owner may update the annotation, and a comment must be
      supplied explaining the reason(s) for the update. If the type or state is
      changed on a data record, downstream dependent record annotations will be
      updated as needed. This applies to "active" warnings and errors.
    tags:
      - annotation
    parameters:
      - name: id
        in: query
        description: Annotation ID
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../components/schemas/annotation.yaml#/annotation_core"
              - type: object
                properties:
                  comment:
                    type: string
                    description: Comment for why update was made.
                required:
                  - comment
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

comment:
  post:
    summary: Add comment to an existing annotation.
    description: |
      Add comment to an existing annotation. Annotation state must be "open" and
      only the annotation creator or the owner of the subject record or folder
      may add comments.
    tags:
      - annotation
    parameters:
      - name: id
        in: query
        description: Annotation ID
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              comment:
                type: string
                description: New comment, markdown supported.
            required:
              - comment
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

comment_edit:
  post:
    summary: Edit a comment on an existing annotation.
    description: Edit a comment on an existing annotation. Annotation state must
      be "open" and only the original comment author may edit the specified
      comment. The comment history is preserved for audit purposes.
    tags:
      - annotation
    parameters:
      - name: id
        in: query
        description: Annotation ID
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              comment_index:
                type: integer
                minimum: 0
                description: Zero-based index of comment to edit
              comment:
                type: string
                description: Edited comment, markdown supported.
            required:
              - comment
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"
