view:
  get:
    summary: View data record information.
    description: View data record information. Requires REC_READ permission.
    tags:
      - record
    parameters:
      - name: id
        in: query
        description: Record ID or alias
        schema:
          type: string
    responses:
      '200':
        description: A data record document
        content:
          application/json:
            schema:
              $ref: "../components/schemas/record.yaml#/record"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

create:
  post:
    summary: Create one or more new data records.
    description: Create one or more new data records. Specify parameters for
      individual records in the 'records' field, and common properties may be
      specified in the 'common' field. Requires CREATE permission on parent
      folder(s).
    tags:
      - record
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              common:
                $ref: "../components/schemas/record.yaml#/record_spec_com"
              records:
                type: array
                description: Array of record creation specification documents
                items:
                  allOf:
                    - $ref: "../components/schemas/record.yaml#/record_spec"
                    - type: object
                      required:
                        - title
                maxLength: 100
            additionalProperties: false
    responses:
      '200':
        description: An array of data record documents in the same order as the 'records' input parameter.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../components/schemas/record.yaml#/record"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

update:
  post:
    summary: Update one or more existing data records.
    description: Update one or more existing data records. Requires REC_WRITE permission.
      Only fields included in request will be altered. To clear a field, it
      should be included with a value of 'null'.
    tags:
      - record
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              common:
                allOf:
                  - $ref: "../components/schemas/record.yaml#/record_spec_com"
                  - $ref: "#/update_opts"
              records:
                type: array
                description: Array of record update specification documents
                items:
                  allOf:
                    - $ref: "../components/schemas/record.yaml#/id"
                    - $ref: "../components/schemas/record.yaml#/record_spec_com"
                    - $ref: "#/update_opts"
                    - type: object
                      required:
                        - id
                      additionalProperties: false
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

update_allocation:
  post:
    summary: Update a data record's allocation.
    description: Update a data record's allocation.
    tags:
      - record
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

update_owner:
  post:
    summary: Update a data record's owner.
    description: Update a data record's owner.
    tags:
      - record
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

delete:
  post:
    summary: Delete an existing record.
    description: Delete an existing record.
    tags:
      - record
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

lock:
  post:
    summary: Lock data record.
    description: Lock data record.
    tags:
      - record
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

unlock:
  post:
    summary: Unlock data record.
    description: Unlock data record.
    tags:
      - record
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

import:
  post:
    summary: Import a data record.
    description: Import a data record from a JSON document.
    tags:
      - record
    responses:
      '200':
        description: A data record document
        content:
          application/json:
            schema:
              $ref: "../components/schemas/record.yaml#/record"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

export:
  get:
    summary: Export a data record.
    description: Export a data record to a JSON document.
    tags:
      - record
    responses:
      '200':
        description: A full data record document in JSON format
        content:
          application/json:
            schema:
              $ref: "../components/schemas/record.yaml#/record"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

prov_graph:
  get:
    summary: Get the provenance graph for a data record.
    description: Get the provenance graph for a data record.
    tags:
      - record
    responses:
      '200':
        description: Provenance graph with data record vertices and dependency relationships.
          Vertices contain a "gen" attribute which indicates the vertices relative
          "latitude" within the pedigree tree for layout purposes.
        content:
          application/json:
            schema:
              type: object
              properties:
                vertices:
                  type: array
                  items:
                    $ref: "../components/schemas/record.yaml#/record"
                edges:
                  type: array
                  items:
                    $ref: "../components/schemas/relationship.yaml"
      '204':
        description: Specified data record has no provenance information.
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

metadata_validate:
  post:
    summary: Validate metadata against a schema.
    description: Validate metadata against a schema.
    tags:
      - record
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

data_download:
  post:
    summary: Download raw data from one or more data records and/or folders.
    description: Download raw data from one or more data records and/or folders
      to a specified destination path.
    tags:
      - record
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              ids:
                type: array
                items:
                  type: string
                description: Record and/or folder IDs or aliases to download.
            additionalProperties: false
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

data_upload:
  post:
    summary: Upload raw data from one or more data records.
    description: Upload raw data from one or more data records.
    tags:
      - record
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

data_delete:
  post:
    summary: Delete raw data associated with one or more data records.
    description: Delete raw data associated with one or more data records.
      Requires WRITE_DATA permission on specified records.
    tags:
      - record
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              ids:
                type: array
                items:
                  type: string
                description: Record IDs or aliases to have data deleted.
            additionalProperties: false
    responses:
      '204':
        $ref: "../components/responses/default.yaml#/ack"
      '400':
        $ref: "../components/responses/default.yaml#/nack"
      '401':
        $ref: "../components/responses/default.yaml#/noauth"

#-------------------- PARAMETERS / OPTIONS --------------------

update_opts:
  type: object
  properties:
    tags_add:
      type: array
      items:
        type: string
      description: Tags to add to specified records. Cannot be specified with 'tags' option.
    tags_rem:
      type: array
      items:
        type: string
      description: Tags to remove from specified records. Cannot be specified with 'tags' option.
    deps_add:
      type: array
      items:
        $ref: "../components/schemas/relationship.yaml"
      description: Outbound dependencies to add to specified records. Cannot be specified with 'deps' option.
    deps_rem:
      type: array
      items:
        $ref: "../components/schemas/relationship.yaml"
      description: Outbound dependencies to remove from specified records. Relationship
        metadata is not required. Cannot be specified with 'deps' option.
    meta_merge:
      type: boolean
      default: true
      description: If true, merge specified metadata with existing; otherwise
        replace existing metadata for all specified records.
